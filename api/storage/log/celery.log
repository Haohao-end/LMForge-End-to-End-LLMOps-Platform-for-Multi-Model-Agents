[2025-04-28 18:38:21,585: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-28 18:38:21,589: INFO/MainProcess] mingle: searching for neighbors
[2025-04-28 18:38:22,610: INFO/MainProcess] mingle: all alone
[2025-04-28 18:38:22,675: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-28 18:38:22,678: INFO/MainProcess] Task internal.task.demo_task.demo_task[b30704b0-3eae-4a13-9605-a9ddc23598e2] received
[2025-04-28 18:38:22,679: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:27,687: INFO/MainProcess] id的值:a4086404-8782-48a0-9276-473ecd855fc5
[2025-04-28 18:38:27,687: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:27,706: INFO/MainProcess] Task internal.task.demo_task.demo_task[b30704b0-3eae-4a13-9605-a9ddc23598e2] succeeded in 5.016000000000076s: 'haohao'
[2025-04-28 18:38:27,709: INFO/MainProcess] Task internal.task.demo_task.demo_task[a9bff6ef-1227-4741-a529-12e79462e391] received
[2025-04-28 18:38:27,709: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:32,724: INFO/MainProcess] id的值:177c8ee6-fdb9-4424-863c-f7e2c1a1590b
[2025-04-28 18:38:32,724: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:32,726: INFO/MainProcess] Task internal.task.demo_task.demo_task[a9bff6ef-1227-4741-a529-12e79462e391] succeeded in 5.030999999999949s: 'haohao'
[2025-04-28 18:38:32,729: INFO/MainProcess] Task internal.task.demo_task.demo_task[291999a9-38eb-4a89-a841-527fb6a06136] received
[2025-04-28 18:38:32,729: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:37,731: INFO/MainProcess] id的值:9f88d7fb-ee2c-4d8c-8b5b-e1761815e46d
[2025-04-28 18:38:37,731: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:37,734: INFO/MainProcess] Task internal.task.demo_task.demo_task[291999a9-38eb-4a89-a841-527fb6a06136] succeeded in 5.0s: 'haohao'
[2025-04-28 18:38:37,736: INFO/MainProcess] Task internal.task.demo_task.demo_task[fbdfcd5e-1be1-4a22-ba62-8a1a05d5c92e] received
[2025-04-28 18:38:37,737: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:42,748: INFO/MainProcess] id的值:37e75091-8965-4e27-aae9-4695777348f3
[2025-04-28 18:38:42,748: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:42,750: INFO/MainProcess] Task internal.task.demo_task.demo_task[fbdfcd5e-1be1-4a22-ba62-8a1a05d5c92e] succeeded in 5.016000000000076s: 'haohao'
[2025-04-28 18:38:42,753: INFO/MainProcess] Task internal.task.demo_task.demo_task[e79a896a-933a-420f-9e2b-bec4d80b1299] received
[2025-04-28 18:38:42,753: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:47,757: INFO/MainProcess] id的值:273bbe8c-de1e-4408-afff-e8accfd3312c
[2025-04-28 18:38:47,757: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:47,759: INFO/MainProcess] Task internal.task.demo_task.demo_task[e79a896a-933a-420f-9e2b-bec4d80b1299] succeeded in 5.016000000000076s: 'haohao'
[2025-04-28 18:38:47,762: INFO/MainProcess] Task internal.task.demo_task.demo_task[a9e975c5-0872-4dbd-b40c-a5f00b9dd87c] received
[2025-04-28 18:38:47,762: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:52,771: INFO/MainProcess] id的值:df4a8d0a-bb9c-4fa8-bfb6-e22610bb51e2
[2025-04-28 18:38:52,771: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:52,773: INFO/MainProcess] Task internal.task.demo_task.demo_task[a9e975c5-0872-4dbd-b40c-a5f00b9dd87c] succeeded in 5.014999999999873s: 'haohao'
[2025-04-28 18:38:52,776: INFO/MainProcess] Task internal.task.demo_task.demo_task[1420eb02-1e94-4c3b-a008-f4b9e0cb62a1] received
[2025-04-28 18:38:52,776: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:38:57,792: INFO/MainProcess] id的值:80cf2573-5f9b-4aec-8f5b-4e6e12569ecc
[2025-04-28 18:38:57,792: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:38:57,794: INFO/MainProcess] Task internal.task.demo_task.demo_task[1420eb02-1e94-4c3b-a008-f4b9e0cb62a1] succeeded in 5.016000000000076s: 'haohao'
[2025-04-28 18:38:57,797: INFO/MainProcess] Task internal.task.demo_task.demo_task[4a33a905-2342-4328-9224-a525f4ae70ce] received
[2025-04-28 18:38:57,797: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:39:02,806: INFO/MainProcess] id的值:4ce5f24b-00d7-44e8-a087-dc47c9bb9cb4
[2025-04-28 18:39:02,807: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:39:02,811: INFO/MainProcess] Task internal.task.demo_task.demo_task[4a33a905-2342-4328-9224-a525f4ae70ce] succeeded in 5.014999999999873s: 'haohao'
[2025-04-28 18:39:02,814: INFO/MainProcess] Task internal.task.demo_task.demo_task[ea17169d-1acc-4a08-a907-d0fbb69c0105] received
[2025-04-28 18:39:02,814: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:39:07,820: INFO/MainProcess] id的值:f3e6a4fb-dc7b-482a-b064-0aa93727287c
[2025-04-28 18:39:07,820: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:39:07,823: INFO/MainProcess] Task internal.task.demo_task.demo_task[ea17169d-1acc-4a08-a907-d0fbb69c0105] succeeded in 5.016000000000076s: 'haohao'
[2025-04-28 18:39:07,827: INFO/MainProcess] Task internal.task.demo_task.demo_task[0bff5f38-5676-4fa0-8f95-6ba2af37b2cf] received
[2025-04-28 18:39:07,827: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:39:12,828: INFO/MainProcess] id的值:dddda2d4-d547-4f2d-87e7-707291cce2db
[2025-04-28 18:39:12,828: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:39:12,831: INFO/MainProcess] Task internal.task.demo_task.demo_task[0bff5f38-5676-4fa0-8f95-6ba2af37b2cf] succeeded in 5.0s: 'haohao'
[2025-04-28 18:41:06,832: INFO/MainProcess] Task internal.task.demo_task.demo_task[0b2162b8-e835-47f6-aba4-dce70045b436] received
[2025-04-28 18:41:06,832: INFO/MainProcess] 睡眠5秒
[2025-04-28 18:41:11,834: INFO/MainProcess] id的值:08878d1e-8b2e-4d55-9ea0-91396e5a4a2f
[2025-04-28 18:41:11,834: INFO/MainProcess] 配置信息:<Config {'DEBUG': True, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': None, 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'CELERY': {'broker_url': 'redis://localhost:6379/1', 'result_backend': 'redis://localhost:6379/1', 'task_ignore_result': False, 'result_expires': 3600, 'broker_connection_retry_on_startup': True}, 'REDIS_DB': '0', 'REDIS_HOST': 'localhost', 'REDIS_PASSWORD': '', 'REDIS_PORT': '6379', 'REDIS_USERNAME': '', 'REDIS_USE_SSL': False, 'SQLALCHEMY_DATABASE_URI': 'postgresql://postgres:postgre@127.0.0.1:5432/llmops?client_encoding=utf8', 'SQLALCHEMY_ECHO': True, 'SQLALCHEMY_ENGINE_OPTIONS': {'pool_size': 30, 'pool_recycle': 3600}, 'WTF_CSRF_ENABLED': False, 'SQLALCHEMY_BINDS': {}, 'SQLALCHEMY_RECORD_QUERIES': False, 'SQLALCHEMY_TRACK_MODIFICATIONS': False}>
[2025-04-28 18:41:11,836: INFO/MainProcess] Task internal.task.demo_task.demo_task[0b2162b8-e835-47f6-aba4-dce70045b436] succeeded in 5.016000000000076s: 'haohao'
[2025-04-28 18:49:27,489: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-28 18:49:27,493: INFO/MainProcess] mingle: searching for neighbors
[2025-04-28 18:49:28,517: INFO/MainProcess] mingle: all alone
[2025-04-28 18:49:28,544: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-28 22:13:55,789: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-28 22:13:55,793: INFO/MainProcess] mingle: searching for neighbors
[2025-04-28 22:13:56,848: INFO/MainProcess] mingle: all alone
[2025-04-28 22:13:56,873: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-28 22:13:59,302: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-28 22:13:59,311: INFO/MainProcess] mingle: searching for neighbors
[2025-04-28 22:14:00,337: WARNING/MainProcess] C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\app\control.py:56: DuplicateNodenameWarning: Received multiple replies from node name: celery@DESKTOP-HK0BK84.
Please make sure you give each node a unique nodename using
the celery worker `-n` option.
  warnings.warn(DuplicateNodenameWarning(

[2025-04-28 22:14:00,337: INFO/MainProcess] mingle: all alone
[2025-04-28 22:14:00,364: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-29 12:04:00,680: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-29 12:04:00,684: INFO/MainProcess] mingle: searching for neighbors
[2025-04-29 12:04:01,721: INFO/MainProcess] mingle: all alone
[2025-04-29 12:04:01,747: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-29 14:12:54,757: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 534, in send_packed_command
    self._sock.sendall(item)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 341, in start
    blueprint.start(self)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\bootsteps.py", line 116, in start
    step.start(parent)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 772, in start
    c.loop(*c.loop_args())
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 143, in synloop
    _loop_cycle()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 132, in _loop_cycle
    connection.drain_events(timeout=2.0)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\connection.py", line 341, in drain_events
    return self.transport.drain_events(self.connection, **kwargs)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\virtual\base.py", line 997, in drain_events
    get(self._deliver, timeout=timeout)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 591, in get
    ret = self.handle_event(fileno, event)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 573, in handle_event
    return self.on_readable(fileno), self
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 569, in on_readable
    chan.handlers[type]()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 918, in _receive
    ret.append(self._receive_one(c))
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 928, in _receive_one
    response = c.parse_response()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 855, in parse_response
    self.check_health()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 893, in check_health
    conn.send_command("PING", self.HEALTH_CHECK_MESSAGE, check_health=False)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 556, in send_command
    self.send_packed_command(
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 545, in send_packed_command
    raise ConnectionError(f"Error {errno} while writing to socket. {errmsg}.")
redis.exceptions.ConnectionError: Error 10054 while writing to socket. 远程主机强迫关闭了一个现有的连接。.
[2025-04-29 14:12:54,922: WARNING/MainProcess] C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py:392: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered
back to the queue. You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss
setting. In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2025-04-29 14:12:54,941: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-29 14:12:54,945: INFO/MainProcess] mingle: searching for neighbors
[2025-04-29 14:12:55,965: INFO/MainProcess] mingle: all alone
[2025-04-29 14:17:04,940: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 534, in send_packed_command
    self._sock.sendall(item)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 341, in start
    blueprint.start(self)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\bootsteps.py", line 116, in start
    step.start(parent)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 772, in start
    c.loop(*c.loop_args())
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 143, in synloop
    _loop_cycle()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 132, in _loop_cycle
    connection.drain_events(timeout=2.0)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\connection.py", line 341, in drain_events
    return self.transport.drain_events(self.connection, **kwargs)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\virtual\base.py", line 997, in drain_events
    get(self._deliver, timeout=timeout)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 591, in get
    ret = self.handle_event(fileno, event)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 573, in handle_event
    return self.on_readable(fileno), self
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 569, in on_readable
    chan.handlers[type]()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 918, in _receive
    ret.append(self._receive_one(c))
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 928, in _receive_one
    response = c.parse_response()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 855, in parse_response
    self.check_health()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 893, in check_health
    conn.send_command("PING", self.HEALTH_CHECK_MESSAGE, check_health=False)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 556, in send_command
    self.send_packed_command(
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 545, in send_packed_command
    raise ConnectionError(f"Error {errno} while writing to socket. {errmsg}.")
redis.exceptions.ConnectionError: Error 10054 while writing to socket. 远程主机强迫关闭了一个现有的连接。.
[2025-04-29 14:17:05,139: WARNING/MainProcess] C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py:392: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered
back to the queue. You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss
setting. In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2025-04-29 14:17:05,146: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-29 14:17:05,151: INFO/MainProcess] mingle: searching for neighbors
[2025-04-29 14:17:06,476: INFO/MainProcess] mingle: all alone
[2025-04-29 14:58:22,527: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 534, in send_packed_command
    self._sock.sendall(item)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 341, in start
    blueprint.start(self)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\bootsteps.py", line 116, in start
    step.start(parent)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 772, in start
    c.loop(*c.loop_args())
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 143, in synloop
    _loop_cycle()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 132, in _loop_cycle
    connection.drain_events(timeout=2.0)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\connection.py", line 341, in drain_events
    return self.transport.drain_events(self.connection, **kwargs)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\virtual\base.py", line 997, in drain_events
    get(self._deliver, timeout=timeout)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 591, in get
    ret = self.handle_event(fileno, event)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 573, in handle_event
    return self.on_readable(fileno), self
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 569, in on_readable
    chan.handlers[type]()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 918, in _receive
    ret.append(self._receive_one(c))
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 928, in _receive_one
    response = c.parse_response()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 855, in parse_response
    self.check_health()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 893, in check_health
    conn.send_command("PING", self.HEALTH_CHECK_MESSAGE, check_health=False)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 556, in send_command
    self.send_packed_command(
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 545, in send_packed_command
    raise ConnectionError(f"Error {errno} while writing to socket. {errmsg}.")
redis.exceptions.ConnectionError: Error 10054 while writing to socket. 远程主机强迫关闭了一个现有的连接。.
[2025-04-29 14:58:23,449: WARNING/MainProcess] C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py:392: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered
back to the queue. You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss
setting. In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2025-04-29 14:58:23,457: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-29 14:58:23,462: INFO/MainProcess] mingle: searching for neighbors
[2025-04-29 14:58:24,805: INFO/MainProcess] mingle: all alone
[2025-04-29 16:22:15,173: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 534, in send_packed_command
    self._sock.sendall(item)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 341, in start
    blueprint.start(self)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\bootsteps.py", line 116, in start
    step.start(parent)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py", line 772, in start
    c.loop(*c.loop_args())
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 143, in synloop
    _loop_cycle()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\loops.py", line 132, in _loop_cycle
    connection.drain_events(timeout=2.0)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\connection.py", line 341, in drain_events
    return self.transport.drain_events(self.connection, **kwargs)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\virtual\base.py", line 997, in drain_events
    get(self._deliver, timeout=timeout)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 591, in get
    ret = self.handle_event(fileno, event)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 573, in handle_event
    return self.on_readable(fileno), self
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 569, in on_readable
    chan.handlers[type]()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 918, in _receive
    ret.append(self._receive_one(c))
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\kombu\transport\redis.py", line 928, in _receive_one
    response = c.parse_response()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 855, in parse_response
    self.check_health()
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\client.py", line 893, in check_health
    conn.send_command("PING", self.HEALTH_CHECK_MESSAGE, check_health=False)
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 556, in send_command
    self.send_packed_command(
  File "C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\redis\connection.py", line 545, in send_packed_command
    raise ConnectionError(f"Error {errno} while writing to socket. {errmsg}.")
redis.exceptions.ConnectionError: Error 10054 while writing to socket. 远程主机强迫关闭了一个现有的连接。.
[2025-04-29 16:22:15,246: WARNING/MainProcess] C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\worker\consumer\consumer.py:392: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered
back to the queue. You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss
setting. In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2025-04-29 16:22:15,255: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-29 16:22:15,261: INFO/MainProcess] mingle: searching for neighbors
[2025-04-29 16:22:16,303: INFO/MainProcess] mingle: all alone
[2025-04-29 21:10:16,840: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-29 21:10:16,850: INFO/MainProcess] mingle: searching for neighbors
[2025-04-29 21:10:17,890: INFO/MainProcess] mingle: all alone
[2025-04-29 21:10:17,929: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-30 09:47:17,972: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-30 09:47:17,988: INFO/MainProcess] mingle: searching for neighbors
[2025-04-30 09:47:19,023: INFO/MainProcess] mingle: all alone
[2025-04-30 09:47:19,052: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-30 09:49:22,662: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-30 09:49:22,668: INFO/MainProcess] mingle: searching for neighbors
[2025-04-30 09:49:23,697: INFO/MainProcess] mingle: all alone
[2025-04-30 09:49:23,724: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-04-30 10:55:06,758: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-04-30 10:55:06,765: INFO/MainProcess] mingle: searching for neighbors
[2025-04-30 10:55:08,124: WARNING/MainProcess] C:\Users\Lenovo\Desktop\llmops-api\venv\lib\site-packages\celery\app\control.py:56: DuplicateNodenameWarning: Received multiple replies from node name: celery@DESKTOP-HK0BK84.
Please make sure you give each node a unique nodename using
the celery worker `-n` option.
  warnings.warn(DuplicateNodenameWarning(

[2025-04-30 10:55:08,124: INFO/MainProcess] mingle: all alone
[2025-04-30 10:55:08,152: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
[2025-05-02 09:47:10,829: INFO/MainProcess] Connected to redis://localhost:6379/1
[2025-05-02 09:47:10,838: INFO/MainProcess] mingle: searching for neighbors
[2025-05-02 09:47:11,885: INFO/MainProcess] mingle: all alone
[2025-05-02 09:47:11,971: INFO/MainProcess] celery@DESKTOP-HK0BK84 ready.
